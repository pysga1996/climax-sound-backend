logging:
  level:
    ROOT:
      INFO
    #    org:
    #      springframework:
    #        web: DEBUG
    org:
      hibernate:
        SQL_SLOW: INFO
      springframework:
        data:
          elasticsearch:
            client:
              WIRE: TRACE
  config: classpath:log4j-spring.xml
server:
  port: 8086
  servlet:
    context-path: /alpha-sound-service
    encoding:
      charset: UTF-8
      enabled: true
      force: true
spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    hikari:
      connectionTimeout: 30000
      idleTimeout: 100000
      maxLifetime: 900000
      maximum-pool-size: 20
      minimum-idle: 10
    tomcat:
      connection-properties: stringtype=unspecified
    url: ${SPRING_DATASOURCE_URL:}
    username: ${SPRING_DATASOURCE_USERNAME:}
    password: ${SPRING_DATASOURCE_PASSWORD:}
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false
  jpa:
    generate-ddl: false
    show-sql: true
    open-in-view: false
    properties:
      hibernate:
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        proc:
          param_null_passing: true
        dialect: org.hibernate.dialect.MariaDB103Dialect
        format_sql: true
        default_schema: alpha_sound
        jdbc:
          batch_size: 20
          lob:
            non_contextual_creation: true
    hibernate:
      ddl-auto: none
  main:
    allow-bean-definition-overriding: true
  messages:
    basename: static/i18n/message
  web:
    locale: en_US
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 200MB
      max-request-size: 215MB
  security:
    oauth2:
      resourceserver:
        opaquetoken:
          introspection-uri: ${AUTH_SERVICE:}
          client-id: ${CLIENT_ID:}
          client-secret: ${CLIENT_SECRET:}
        jwt:
          jwk-set-uri: ${JWKS_ENDPOINT:}
  cache:
    type: redis
  redis:
    host: ${REDIS_HOST:}
    port: ${REDIS_PORT:}
    database: ${REDIS_DB:}
    password: ${REDIS_PASSWORD:}
  kafka:
    bootstrap-servers: '[::1]:9092,[::1]:9093,[::1]:9094'
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: vengeance
      max-poll-records: 100
      enable-auto-commit: false
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    jaas:
      enabled: false
      options:
        topic-prefix: ""
  elasticsearch:
    rest:
      uris: ${ES_URL:}
      username: ${ES_USERNAME:}
      password: ${ES_PASSWORD:}
storage:
  storage-type: firebase
  temp: ${TEMP_DIR:}
  cloudinary:
    url: ${CLOUDINARY_URL:}
  firebase:
    database-url: ${FIREBASE_DATABASE_URL:}
    storage-bucket: ${FIREBASE_STORAGE_BUCKET:}
    credentials: ${FIREBASE_CREDENTIALS:}
  local:
    upload-root-uri: ${UPLOAD_ROOT_URI}
    upload-dir: ${UPLOAD_DIR:}
